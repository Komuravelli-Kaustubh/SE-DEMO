Cpp code:

#include <iostream>
#include <vector>
#include <algorithm>
#include <unordered_map>

using namespace std;



int main()
{
    string s;
    cin>>s;
    unordered_map<char,int> mymap;
    vector<int> store;
    
    sort(s.begin(),s.end());
    for(char c: s)
    {
        mymap[c]+=1;
    }
    
    for(const auto& p: mymap)
    {
        store.push_back(p.second);
    }
    
    int count=0;
    
    for(int x : store)
    {
        if(x%2!=0)
        count++;
    }
    
    
    if(count<=1)
    {
        cout<<"Palindrome"<<endl;
    }
    else{
        cout<<"Not Palindrome"<<endl;
    }    
}

Java Code

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class PalindromeCheck {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String input = scanner.nextLine();

        Map<Character, Integer> charFrequency = new HashMap<>();

        // Populate charFrequency using a for-each loop
        for (char c : input.toCharArray()) {
            charFrequency.put(c, charFrequency.getOrDefault(c, 0) + 1);
        }

        int oddCount = 0;

        // Count the odd frequencies using a for-each loop
        for (int count : charFrequency.values()) {
            if (count % 2 != 0) {
                oddCount++;
            }
        }

        if (oddCount <= 1) {
            System.out.println("Palindrome");
        } else {
            System.out.println("Not Palindrome");
        }
    }
}

